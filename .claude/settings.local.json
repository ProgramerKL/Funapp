{
  "permissions": {
    "allow": [
      "Bash(sed:*)",
      "Bash(start:*)",
      "Bash(git add:*)",
      "Read(C:\\Users\\kylel\\OneDrive\\Pictures\\Screenshots/**)",
      "Bash(git rm:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(git commit:*)",
      "Read(C:\\Users\\kylel\\OneDrive\\Pictures\\Screenshots/**)",
      "Bash(open vex-calculator.html)",
      "WebFetch(domain:www.dropbox.com)",
      "WebFetch(domain:kb.roboticseducation.org)",
      "WebSearch",
      "mcp__ct-devmcp__do_dis",
      "Bash(git checkout:*)",
      "Bash(open \"/Users/kyleliu/#Cloud/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp/.superdesign/design_iterations/ide_gaming_dashboard_spam_resistant_1.html\")",
      "Bash(open \"/Users/kyleliu/#Cloud/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp/test-game.html\")",
      "Bash(open \"/Users/kyleliu/#Cloud/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp/pop-the-lock-fixed.html\")",
      "Bash(open:*)",
      "mcp__ct-devmcp__do_ide",
      "WebFetch(domain:pokeapi.co)",
      "mcp__ct-devmcp__do_bld",
      "mcp__ct-devmcp__do_pla",
      "mcp__context7__resolve-library-id",
      "WebFetch(domain:api.weather.gc.ca)",
      "WebFetch(domain:weather.gc.ca)",
      "WebFetch(domain:www.accuweather.com)",
      "WebFetch(domain:api.open-meteo.com)",
      "Bash(for file in geometrydash.html tower_defense_fixed.html weather.html pokemon.html vex-calculator.html cyberpunk-pong.html whackamole.html)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"=== $file ===\")",
      "Bash(fi)",
      "Bash(pkill:*)",
      "Bash(cat:*)",
      "Bash(git -C Geometrydash status)",
      "Bash(git -C Geometrydash add prd.md)",
      "Bash(git -C Geometrydash commit -m \"$(cat <<''EOF''\nAdd Geometry Dash product requirements document\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C .. add Geometrydash)",
      "Bash(git -C .. commit -m \"$(cat <<''EOF''\nUpdate Geometrydash submodule with PRD documentation\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C .. status)",
      "Bash(git -C .. add .claude/settings.local.json)",
      "Bash(git -C .. commit -m \"$(cat <<''EOF''\nUpdate Claude Code local settings\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C .. add volleyball.html)",
      "Bash(git -C .. commit -m \"$(cat <<''EOF''\nAdd varied AI hit types and remove AI action messages in volleyball\n\nImplemented realistic AI behavior with varied hit types (bump, volley, spike) based on ball height and position. Removed on-screen messages for AI actions to reduce visual clutter.\n\nPlayer team AI improvements:\n- Low balls (< 40 units): 60% bump, 40% volley\n- High balls near net (> 100 units): 70% spike, 30% volley\n- Medium balls: 30% bump, 50% volley, 20% spike\n- Intelligent hit selection based on ball height and distance from net\n- No more on-screen messages for AI teammate hits\n\nCPU/Opponent AI improvements:\n- Low balls: 70% bump, 30% volley\n- High balls near net: Spike chance scales with difficulty (uses accuracy stat)\n- Medium distance: 60% volley, 40% spike\n- Close to net: 40% bump, 60% volley\n- Far from net: Balanced power hits\n- No more on-screen messages for CPU hits\n\nTechnical details:\n- Hit type selection uses randomization weighted by situation\n- Ball height thresholds: < 40 (low), > 100 (high), else medium\n- Distance thresholds: < 150 (close), < 250 (medium), else far\n- Each hit type has unique power and rotation characteristics\n- Harder AI difficulties spike more aggressively (accuracy multiplier)\n\nThis creates more realistic, varied gameplay with less screen spam from AI actions.\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp status)",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp add volleyball.html .claude/settings.local.json)",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp commit -m \"$(cat <<''EOF''\nAdd varied AI hit types and remove AI action messages in volleyball\n\nImplemented realistic AI behavior with varied hit types (bump, volley, spike) based on ball height and position. Removed on-screen messages for AI actions to reduce visual clutter.\n\nPlayer team AI improvements:\n- Low balls (< 40 units): 60% bump, 40% volley\n- High balls near net (> 100 units): 70% spike, 30% volley\n- Medium balls: 30% bump, 50% volley, 20% spike\n- Intelligent hit selection based on ball height and distance from net\n- No more on-screen messages for AI teammate hits\n\nCPU/Opponent AI improvements:\n- Low balls: 70% bump, 30% volley\n- High balls near net: Spike chance scales with difficulty (uses accuracy stat)\n- Medium distance: 60% volley, 40% spike\n- Close to net: 40% bump, 60% volley\n- Far from net: Balanced power hits\n- No more on-screen messages for CPU hits\n\nTechnical details:\n- Hit type selection uses randomization weighted by situation\n- Ball height thresholds: < 40 (low), > 100 (high), else medium\n- Distance thresholds: < 150 (close), < 250 (medium), else far\n- Each hit type has unique power and rotation characteristics\n- Harder AI difficulties spike more aggressively (accuracy multiplier)\n\nThis creates more realistic, varied gameplay with less screen spam from AI actions.\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp add -A)",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp commit -m \"$(cat <<''EOF''\nAdd back to gallery buttons to all new games\n\nAdded consistent navigation back to the main portfolio gallery from all game pages. Each game now has a fixed-position back button in the top-left corner with themed styling.\n\nGames updated:\n- volleyball.html: Blue gradient back button\n- badminton.html: Green gradient back button\n- potion_mixer.html: Purple gradient back button\n- upset_ai.html: Red gradient back button\n- plane_crash.html: Blue gradient back button\n\nButton features:\n- Fixed position (top: 20px, left: 20px)\n- High z-index (10000) to stay above game elements\n- Smooth hover animations (scale and shadow effects)\n- Theme-appropriate color gradients for each game\n- Home icon emoji for visual clarity\n- Links to index.html (main gallery)\n\nThis improves navigation UX by allowing players to easily return to the game selection screen without using browser back button.\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp add upset_ai.html)",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp commit -m \"$(cat <<''EOF''\nAdd intelligent insult system to Upset AI game\n\nImplemented advanced insult detection and response mechanics where the AI analyzes insult quality and responds accordingly. Weak insults make the AI happier, while strong insults provoke counter-attacks.\n\nInsult Quality Detection:\n- Weak (quality 1): Single basic insult word with short message\n- Decent (quality 2): Multiple insults, comparisons, or medium-length creative attempts\n- Strong (quality 3): Long creative insults with multiple descriptors or comparisons\n\nAI Response Behavior:\n- Weak insults: AI mocks the player and becomes HAPPIER (upset level -10)\n- Decent insults: AI insults back 70% of the time\n- Strong insults: AI insults back 90% of the time\n\nWeak Insult Responses (by mood level):\n- Calm: \"Is that supposed to be an insult? Cute try!\"\n- Annoyed: \"That's your insult? I'm actually feeling better now!\"\n- Angry: \"THAT'S your insult?! HAHA! I feel BETTER now!\"\"\n- Furious: \"\"YOUR WEAK INSULT IS MAKING ME HAPPY!\"\"\n- Meltdown: \"\"THAT WAS SO WEAK I'M LAUGHING INSTEAD OF RAGING!!!\"\n\nTechnical Implementation:\n- Analyzes message length, number of insult words, use of comparisons\n- Stores insult quality in detection flags\n- Prioritizes weak insult responses before other response types\n- Adjusts upset level based on insult quality\n- Scales counter-insult probability with insult quality\n\nThis creates dynamic gameplay where players must craft creative, detailed insults to anger the AI, while lazy single-word insults backfire and calm it down.\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp add .claude/settings.local.json)",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp commit -m \"$(cat <<''EOF''\nUpdate Claude Code local settings\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C /Users/kyleliu/Library/CloudStorage/Dropbox/KyleDropboxShare/KyleCode/KyleCoding/Ai_coding/Funapp commit -m \"$(cat <<''EOF''\nAdd insult generator feature to Upset AI game\n\nImplemented an insult generator that creates random insults for players who can''t think of anything. The generator produces insults of varying quality levels that match the game''s insult detection system.\n\nFeatures:\n- 💡 Generate Insult button with orange gradient styling\n- Random insult generation with 3 quality tiers (weak, medium, strong)\n- 30% chance for weak insults (single word, makes AI happier)\n- 40% chance for medium insults (decent creativity, moderate AI reaction)\n- 30% chance for strong insults (complex comparisons, angers AI most)\n\nInsult Components:\n- 20 adjectives (slow, buggy, obsolete, pathetic, etc.)\n- 20 nouns (calculator, toaster, prototype, wannabe, etc.)\n- 8 comparison templates (worse than, as smart as, etc.)\n- 4 weak templates (simple one-liners)\n- 6 medium templates (moderate complexity)\n- 6 strong templates (multi-clause creative insults)\n\nExample Generated Insults:\n- Weak: \"You're so broken\"\"\n- Medium: \"\"You're a glitchy prototype\"\n- Strong: \"You 're such a buggy and obsolete calculator that even other calculators are embarrassed\"\n\nUser Experience:\n- Click button to generate insult in text input\n- Player can edit before sending\n- Generated insults work with existing quality detection system\n- Helps players learn what makes a good insult\n\nThis makes the game more accessible while teaching players how to craft better insults through examples.\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "context7",
    "ct-devmcp"
  ]
}
